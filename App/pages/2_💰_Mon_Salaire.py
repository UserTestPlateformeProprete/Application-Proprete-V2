import streamlit as st
import pandas as pd

# Configuration de la page
st.set_page_config(
    page_title="Mon salaire",
    page_icon="üìñ",
)
st.title("Tout savoir sur mon salaire")

# Importation de la fiche des salaires
grades = pd.read_csv('App/fiche_grades_et_salaires.csv')

# Inscription en dur des niveaux de prime d'anciennet√©
primes = [[4, 2], [6, 3], [8, 4], [10, 5], [15, 5.5], [20, 6]]

# Container pour le renseignement de son grade
with st.container():
    st.subheader("Je renseigne mon grade")
    with st.expander("O√π trouver votre grade"):
        st.write("""Vous pouvez retrouver votre grade, ou votre qualification, sur le haut de votre fiche de paye.
        Exemple+""")
    niveau = st.selectbox('Selectionner votre niveau', grades["Niveau"].drop_duplicates().drop_duplicates())
    echelon = st.selectbox('Selectionner votre √©chelon', grades.loc[grades['Niveau'] == niveau, 'Echelon'].drop_duplicates().drop_duplicates())

st.divider()

# Container pour renseigner son anciennet√©
with st.container():
    st.subheader("Je renseigne mon anciennet√©")
    with st.expander("Comment connaitre son niveau d'exp√©rience"):
        st.write("""Connaitre son anciennet√© permet de calculer le montant de la prime d'exp√©rience. Cette prime est vers√©e
         mensuellement aux employ√©s. On compte comme exp√©rience tout emploi effectu√© dans la profession pouvant √™tre 
         justifi√© via un contrat de travail (ou autre justificatif). Une pause ou interruption de plus de 12 mois dans la 
         profession remet le compteur d'exp√©rience √† 0.   
         La prime est calcul√©e comme une bonification des heures du contrat √† temps partiel selon les niveaux d'exp√©riences
         suivant :   
         - apr√®s 4 ans d'exp√©rience professionnelle : 2 % ;   
         - apr√®s 6 ans d'exp√©rience professionnelle : 3 % ;   
         - apr√®s 8 ans d'exp√©rience professionnelle : 4 % ;   
         - apr√®s 10 ans d'exp√©rience professionnelle : 5 % ;   
         - apr√®s 15 ans d'exp√©rience professionnelle au 1er janvier 2012 : 5,5 % ;   
         - apr√®s 20 ans d'exp√©rience professionnelle au 1er janvier 2013 : 6 %.""")
    anciennete = st.number_input("Entrer un nombre d'ann√©e", step=1, format="%i")

st.divider()

# Container pour renseigner son nombre d'heures
with st.container():
    st.subheader("Je renseigne mon nombre d'heures travaill√©es mensuelles")
    heures_contractuelles = st.number_input("Entrer le nombre d'heures mensuelles du contrat (hors compl√©ment d'heures) ", step=1, format="%i")
    with st.expander("Ou retrouver son nombre d'heures ?"):
        st.write("""Vous pouvez retrouver ce nombre d'heures sur votre contrat. 
        Si vous faites du compl√©ment d'heures, ne les comptez pas ici.""")
    heures_travaillees = st.number_input("Entrer le nombre d'heures travaill√©es ce mois (heures suppl√©mentaires et compl√©ments d'heures compris)", step=1, format="%i")
    est_taux_horaire_B = st.checkbox("J'ai travaill√© trois mois en continu et je ne suis pas en remplacement")

st.divider()

# Container pour les informations sur le travail de nuit
a_travail_de_nuit = st.checkbox("J'ai effectu√© du travail de nuit")
with st.expander("Qu'est-ce qu'une heure de nuit ?"):
    st.write("""Les heures de nuits sont les heures de travail effectu√©es entre 21h et 5h du
    matin si vous n'avez pas le statut de travailleur de nuit, et entre 21h et 6h du matin 
    si vous avez le statut de travailleur de nuit.    
    Le statut de travailleur de nuit concerne les personnes qui travaillent au moins **2 
    fois par semaine** plus de **3h** entre 21h et 6h.    
    De plus, il concerne aussi les personnes ayant effectu√©es **plus de 270h** de travail
    de nuit sur les **12 mois pr√©c√©dents**.    
    Le statut de travailleur de nuit donne droit √† des compensations en heures de repos
    suppl√©mentaires.
    """)

heures_de_nuit_regulieres = 0
heures_de_nuit_occasionnelles = 0

if a_travail_de_nuit:
    with st.container():
        st.subheader("Je renseigne mes heures de nuit pour des travaux r√©guliers")
        with st.expander("Qu'est-ce qu'une heure de nuit pour des travaux r√©guliers ?"):
            st.write("""Les travaux r√©guliers concernent tous les travaux planifi√©s et
            potentiellement inscrits dans le contrat de travail. Les heures de travail
            de nuit exerc√©es dans ce cadre sont bonifi√©es √† hauteur de 20%""")
        heures_de_nuit_regulieres = st.number_input("Entrer le nombre d'heures faites de nuit pour des travaux r√©guliers", step=1, format="%i")

    with st.container():
        st.subheader("Je renseigne mes heures de nuit pour des travaux occasionnels")
        with st.expander("Qu'est-ce qu'une heure de nuit pour des travaux occasionnels ?"):
            st.write("""Les travaux occasionnels d√©signent tous les travaux non planifi√©s.
            Les heures de travail de nuit exerc√©es dans ce cadre sont bonifi√©es √† hauteur 
            de 100%""")
        heures_de_nuit_occasionnelles = st.number_input("Entrer le nombre d'heures faites de nuit pour des travaux occasionnels", step=1, format="%i")

st.divider()

# Container pour renseigner son nombre d'heures le dimanche

a_travail_le_jour_du_dimanche = st.checkbox("J'ai travaill√© le dimanche")
with st.expander("Qu'elle est la r√©mun√©ration "):
    st.write("""Les heures de travail du dimanche sont major√©es dans les conditions ci-apr√®s :    
 - heures de travail effectu√©es normalement le dimanche conform√©ment au planning et/ou contrat de travail du salari√© : 20 % ;
 - heures de travail effectu√©es exceptionnellement le dimanche non pr√©vues au planning ni au contrat de travail : 100 %.""")

heures_du_dimanche = 0

if a_travail_le_jour_du_dimanche:
    with st.container():
        a_contrat_de_travail_jour_du_dimanche = st.checkbox("Il est √©crit dans mon contrat de travail que je travaille le dimanche. ")
        st.subheader("Je renseigne mes heures effectu√©es le dimanche")
        heures_du_dimanche = st.number_input("Entrer le nombre d'heures faites le dimanche", step=1, format="%i")

st.divider()

# Container pour renseigner son nombre d'heures les jours f√©ri√©s

a_travail_le_jour_ferie = st.checkbox("J'ai travaill√© des jours f√©ri√©s")
with st.expander("Qu'elle est la r√©mun√©ration pour les jours f√©ri√©s? "):
    st.write("""Les heures de travail les jours f√©ri√©s sont major√©es dans les conditions ci-apr√®s :
 ‚Äì heures de travail effectu√©es normalement les jours f√©ri√©s conform√©ment au planning et/ou contrat de travail du salari√© : 50 % ;
 ‚Äì heures de travail effectu√©es exceptionnellement les jours f√©ri√©s non pr√©vues au planning ni au contrat de travail : 100 %.""")

heures_du_ferie = 0

if a_travail_le_jour_ferie:
    with st.container():
        a_contrat_de_travail_jour_ferie = st.checkbox("Il est √©crit dans mon contrat de travail que je travaille les jours f√©ri√©s. ")
        st.subheader("Je renseigne mes heures effectu√©es les jours f√©ri√©s ce mois-ci")
        heures_du_ferie = st.number_input("Entrer le nombre d'heures faites les jours f√©ri√©s", step=1, format="%i")

st.divider()

# Container pour complement heures

a_complement_heures = st.checkbox("J'ai un ou plusieurs compl√©ments d'heures")
with st.expander("Qu'est-ce qu'un compl√©ment d'heures"):
    st.write("""Un compl√©ment d'heure est un avenant au contrat de travail pouvant 
    √™tre propos√© au travailleur en temps partiel. Il s'agit d'ajouter des heures 
    (au minimum 1/10 des heures du contrat initial). C'est un ajout **temporaire**
    bien d√©terminer entre une date de d√©but et une date de fin. Les heures 
    travaill√©es du compl√©ment d'heure sont bonifi√©es √† 10%.""")

if a_complement_heures:
    with st.container():
        heures_du_complement = st.number_input("Entrer le nombre d'heure du compl√©ment pour le mois voulu", step=1, format="%i")

st.divider()

# Container pour afficher le salaire
with (st.container()):
    st.subheader("Bilan")

    salaire_brut_total = 0

    # D√©termination de la base
    if est_taux_horaire_B:
        base = float(grades.loc[(grades["Niveau"] == niveau) & (grades["Echelon"] == echelon), 'Taux Horaire B'])
    else: base = float(grades.loc[(grades["Niveau"] == niveau) & (grades["Echelon"] == echelon), 'Taux Horaire A'])
    st.write("Mon taux horaire est", base, "‚Ç¨/heure")

    # D√©termination des heures compl√©mentaires / de la r√©mun√©ration du compl√©ment d'heures
    salaire_complements_heures = 0
    prime_heures_complementaires_maj_11 = 0
    prime_heures_complementaires_maj_25 = 0
    if a_complement_heures:
        salaire_complements_heures = base * 1.1 * heures_du_complement
        prime_heures_complementaires_maj_25 = base * 1.25 * (heures_travaillees - heures_contractuelles - heures_du_complement)
        st.write("Mon compl√©ment d'heures de ", heures_du_complement, "h me rapporte ", round(salaire_complements_heures, 2), "‚Ç¨")
        st.write("""Mes heures "suppl√©mentaire" en dehors de compl√©ments d'heures me rapporte """, round(salaire_complements_heures, 2), "‚Ç¨")
        salaire_brut_total += salaire_complements_heures + prime_heures_complementaires_maj_25

    else :
        heures_complementaires_maj_11 = min(max(heures_travaillees - heures_contractuelles, 0), 0.1 * heures_contractuelles)
        prime_heures_complementaires_maj_11 = base * 1.11 * heures_complementaires_maj_11
        st.write("J'ai ", heures_complementaires_maj_11, "heures compl√©mentaire major√©es √† 11%, soit un revenu de : ", round(prime_heures_complementaires_maj_11, 2), "‚Ç¨")

        heures_complementaire_maj_25 = min(max(heures_travaillees - (heures_contractuelles + heures_contractuelles * 0.1), 0), 1 / 3 * heures_contractuelles - 0.1 * heures_contractuelles)
        prime_heures_complementaires_maj_25 = base * 1.25 * heures_complementaire_maj_25
        st.write("J'ai ", heures_complementaire_maj_25, "heures compl√©mentaire major√©es √† 25%, soit un revenu de : ", round(prime_heures_complementaires_maj_25, 2), "‚Ç¨")
        salaire_brut_total += prime_heures_complementaires_maj_25 + prime_heures_complementaires_maj_11

    # Calcul de la majoration heures de nuit
    if a_travail_de_nuit:
        prime_heures_de_nuit_prevues = 1.2 * base * heures_de_nuit_regulieres
        prime_heures_de_nuit_imprevues = 2 * base * heures_de_nuit_occasionnelles
        st.write("Le cumul de mes ", heures_de_nuit_occasionnelles+heures_de_nuit_regulieres, "h de travail de nuit me rapporte ", prime_heures_de_nuit_prevues + prime_heures_de_nuit_imprevues, "‚Ç¨")
        salaire_brut_total += prime_heures_de_nuit_imprevues + prime_heures_de_nuit_prevues

    # Calcul de la majoration heures du dimanche
    if a_travail_le_jour_du_dimanche:
        if a_contrat_de_travail_jour_du_dimanche:
            prime_heures_le_dimanche = 1.2 * base * heures_du_dimanche
        else:
            prime_heures_le_dimanche = 2 * base * heures_du_dimanche
        st.write("Le cumul de mes ", heures_du_dimanche,
                     "h de travail le dimanche me rapporte ", prime_heures_le_dimanche,"‚Ç¨")
        salaire_brut_total += prime_heures_le_dimanche

    # Calcul de la majoration heures jours f√©ri√©s
    if a_travail_le_jour_ferie:
        if a_contrat_de_travail_jour_ferie:
            prime_heures_jour_ferie = 1.5 * base * heures_du_ferie
        else:
            prime_heures_jour_ferie = 2 * base * heures_du_ferie
        st.write("Le cumul de mes ", heures_du_ferie,
                    "h de travail les jours f√©ri√©s me rapporte ", prime_heures_jour_ferie, "‚Ç¨")
        salaire_brut_total += prime_heures_jour_ferie

    # Determine le niveau d'anciennet√©
    niveau_prime_anciennete = 0
    remuneration_minimale_hierarchique = base * heures_contractuelles
    if anciennete > 3:
        for prime in reversed(primes) :
            if anciennete >= prime[0]:
                niveau_prime_anciennete = prime[1]
                break
    prime_anciennete = niveau_prime_anciennete / 100 * remuneration_minimale_hierarchique
    st.write("Ma prime d'anciennet√© me rapporte ", round(prime_anciennete, 2), "‚Ç¨")
    salaire_brut_total += prime_anciennete

    salaire_brut_total += base * (heures_contractuelles - heures_de_nuit_occasionnelles - heures_de_nuit_regulieres-heures_du_dimanche-heures_du_ferie)
    st.write("Mon salaire minimum brut est donc de :", round(salaire_brut_total,2), "‚Ç¨")


